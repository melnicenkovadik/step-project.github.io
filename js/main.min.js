/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./user */ "./src/js/user.js");
/* harmony import */ var _create_edit_card_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-edit-card-modal */ "./src/js/create-edit-card-modal.js");
/* harmony import */ var _card_operations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./card-operations */ "./src/js/card-operations.js");
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./filter */ "./src/js/filter.js");
/* harmony import */ var _drag_and_drop_card__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./drag-and-drop-card */ "./src/js/drag-and-drop-card.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }







var App =
/*#__PURE__*/
function () {
  function App() {
    _classCallCheck(this, App);
  }

  _createClass(App, null, [{
    key: "init",
    value: function init() {
      new _user__WEBPACK_IMPORTED_MODULE_0__["User"]();
      new _create_edit_card_modal__WEBPACK_IMPORTED_MODULE_1__["CreateEditCardModal"]();
      new _card_operations__WEBPACK_IMPORTED_MODULE_2__["CardOperations"]();
      new _filter__WEBPACK_IMPORTED_MODULE_3__["Filter"]();
      _drag_and_drop_card__WEBPACK_IMPORTED_MODULE_4__["dragAndDropCardInstance"].sortable();
    }
  }]);

  return App;
}();

App.init();

/***/ }),

/***/ "./src/js/card-operations.js":
/*!***********************************!*\
  !*** ./src/js/card-operations.js ***!
  \***********************************/
/*! exports provided: CardOperations, cardOperationInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardOperations", function() { return CardOperations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cardOperationInstance", function() { return cardOperationInstance; });
/* harmony import */ var _shared_api_methods__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared/api-methods */ "./src/js/shared/api-methods.js");
/* harmony import */ var _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/medical-data-operations */ "./src/js/shared/medical-data-operations.js");
/* harmony import */ var _shared_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/modal */ "./src/js/shared/modal.js");
/* harmony import */ var _shared_confirm_modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shared/confirm-modal */ "./src/js/shared/confirm-modal.js");
/* harmony import */ var _shared_modal_card_operation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/modal-card-operation */ "./src/js/shared/modal-card-operation.js");
/* harmony import */ var _visits_therapist__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./visits/therapist */ "./src/js/visits/therapist.js");
/* harmony import */ var _visits_dentist__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./visits/dentist */ "./src/js/visits/dentist.js");
/* harmony import */ var _visits_cardiologist__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./visits/cardiologist */ "./src/js/visits/cardiologist.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }









var CardOperations =
/*#__PURE__*/
function () {
  function CardOperations() {
    _classCallCheck(this, CardOperations);

    this.visitBoard = document.getElementById('visit-board');
    this.boardMessage = document.querySelector('#board-message');
    this.cardList = document.getElementsByClassName('visit-card');
    this.createCardBtn = document.getElementById('create-card-btn');
    this.editCardBtn = document.getElementById('edit-card-btn');
    this.closeBtn = document.querySelector('.close-btn');
    this.preloader = document.getElementById('preloader');
    this.backgroundCardSFinish = '#949494';
    this.backgroundCardSOpen = '#658eff';
    this.currentCardId = null;
  }

  _createClass(CardOperations, [{
    key: "buildCard",
    value: function buildCard(visit) {
      var _this = this;

      var card = document.createElement('div');
      card.className = 'visit-card';
      card.dataset.id = "".concat(visit.id || '');

      if (visit.status === 'Закрыт') {
        card.style.backgroundColor = "".concat(this.backgroundCardSFinish);
      }

      var cardBlock = document.createElement('div');
      cardBlock.className = 'card-block';
      var closeBtn = document.createElement('button');
      closeBtn.innerHTML = '&times;';
      closeBtn.className = "close-btn";
      closeBtn.title = "Удалить карточку";
      closeBtn.addEventListener('click', function () {
        return _this.removeCard(card.dataset.id);
      });
      cardBlock.append(closeBtn);
      var dragIcon = document.createElement('div');
      dragIcon.className = "card-drop";
      dragIcon.innerHTML = "<i class=\"icon-move-1 handle\"></i>";
      cardBlock.append(dragIcon);
      var cardName = document.createElement('p');
      cardName.innerText = "\u0424\u0418\u041E:  ".concat(visit.name);
      cardName.className = 'card-name';
      cardBlock.append(cardName);
      var cardDoctor = document.createElement('p');
      cardDoctor.innerText = "\u0414\u043E\u043A\u0442\u043E\u0440:  ".concat(visit.doctor);
      cardDoctor.className = 'card-doctor';
      cardBlock.append(cardDoctor);
      var changeBtn = document.createElement('div');
      changeBtn.className = 'wrapper-changeBtn';
      var dropdown = document.createElement('div');
      dropdown.className = 'dropdown';
      dropdown.innerHTML = "<button class=\"icon-dot-3 dropdown__change-btn\"></button>";
      changeBtn.append(dropdown);
      var dropdownContent = document.createElement('div');
      dropdownContent.className = 'dropdown__content';
      dropdownContent.innerHTML = "<a href=\"#\" class=\"dropdown__link link-remove\" data-id=\"dropdown-remove\">\u0423\u0434\u0430\u043B\u0438\u0442\u044C</a>\n                               <a href=\"#\" class=\"dropdown__link link-edit\" data-id=\"dropdown-edit\">\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C</a>\n                               <a href=\"#\" class=\"dropdown__link link-finish\" data-id=\"dropdown-finish\">\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044C</a>";
      dropdownContent.addEventListener('click', function (event) {
        return _this.changeCards(event, card.dataset.id);
      });
      dropdown.append(dropdownContent);
      cardBlock.append(changeBtn);
      var hiddenBlock = document.createElement('div');
      hiddenBlock.className = "hidden-block hidden";
      hiddenBlock.innerHTML = this.getDoctorInput(visit);
      cardBlock.append(hiddenBlock);
      var showMore = document.createElement('p');
      showMore.innerText = 'Показать больше';
      showMore.className = 'show-more';
      showMore.addEventListener('click', function () {
        hiddenBlock.classList.toggle('hidden');
        showMore.innerText = hiddenBlock.classList.contains('hidden') ? 'Показать больше' : 'Показать меньше';
      });
      cardBlock.append(showMore);

      if (this.boardMessage) {
        this.boardMessage.classList.add('close');
      }

      card.append(cardBlock);
      return {
        card: card,
        cardBlock: cardBlock
      };
    }
  }, {
    key: "getDoctorInput",
    value: function getDoctorInput(visit) {
      switch (visit.doctor) {
        case 'Терапевт':
          return "<p class=\"card-specialists\">C\u043F\u0435\u0446\u0438\u0430\u043B\u0438\u0441\u0442:  ".concat(visit.specialists, "</p>\n                                 <p class=\"card-status\">\u0421\u0442\u0430\u0442\u0443\u0441:  ").concat(visit.status, "</p>\n                                 <p class=\"card-priority\">\u041F\u0440\u0438\u043E\u0440\u0438\u0442\u0435\u0442:  ").concat(visit.priority, "\n                                 <p class=\"card-date\">\u0414\u0430\u0442\u0430:  ").concat(visit.date, "</p>                                 \n                                 <p class=\"card-age\">\u0412\u043E\u0437\u0440\u0430\u0441\u0442:  ").concat(visit.age, "</p>\n                                 <p class=\"card-title\">\u0426\u0435\u043B\u044C \u0432\u0438\u0437\u0438\u0442\u0430:  ").concat(visit.title, "</p>\n                                 <p class=\"card-description\">\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u043E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u0432\u0438\u0437\u0438\u0442\u0430:  ").concat(visit.description, "</p>");

        case 'Стоматолог':
          return "<p class=\"card-specialists\">C\u043F\u0435\u0446\u0438\u0430\u043B\u0438\u0441\u0442:  ".concat(visit.specialists, "</p>\n                                 <p class=\"card-status\">\u0421\u0442\u0430\u0442\u0443\u0441:  ").concat(visit.status, "</p>\n                                 <p class=\"card-priority\">\u041F\u0440\u0438\u043E\u0440\u0438\u0442\u0435\u0442:  ").concat(visit.priority, "\n                                 <p class=\"card-date\">\u0414\u0430\u0442\u0430:  ").concat(visit.date, "</p>                                 \n                                 <p class=\"card-lastVisit\">\u0414\u0430\u0442\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u0435\u043D\u0435\u0433\u043E \u043F\u043E\u0441\u0435\u0449\u0435\u043D\u0438\u044F:  ").concat(visit.lastVisit, "</p>\n                                 <p class=\"card-title\">\u0426\u0435\u043B\u044C \u0432\u0438\u0437\u0438\u0442\u0430:  ").concat(visit.title, "</p>\n                                 <p class=\"card-description\">\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u043E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u0432\u0438\u0437\u0438\u0442\u0430:  ").concat(visit.description, "</p>");

        case 'Кардиолог':
          return "<p class=\"card-specialists\">C\u043F\u0435\u0446\u0438\u0430\u043B\u0438\u0441\u0442:  ".concat(visit.specialists, "</p>\n                                 <p class=\"card-status\">\u0421\u0442\u0430\u0442\u0443\u0441:  ").concat(visit.status, "</p>\n                                 <p class=\"card-priority\">\u041F\u0440\u0438\u043E\u0440\u0438\u0442\u0435\u0442:  ").concat(visit.priority, "\n                                 <p class=\"card-date\">\u0414\u0430\u0442\u0430:  ").concat(visit.date, "</p>                                 \n                                 <p class=\"card-age\">\u0412\u043E\u0437\u0440\u0430\u0441\u0442:  ").concat(visit.age, "</p>\n                                 <p class=\"card-title\">\u0426\u0435\u043B\u044C \u0432\u0438\u0437\u0438\u0442\u0430:  ").concat(visit.title, "</p>\n                                 <p class=\"card-pressure\">\u041E\u0431\u044B\u0447\u043D\u043E\u0435 \u0434\u0430\u0432\u043B\u0435\u043D\u0438\u0435:  ").concat(visit.pressure, "</p>\n                                 <p class=\"card-weight\">\u0418\u043D\u0434\u0435\u043A\u0441 \u043C\u0430\u0441\u0441\u044B \u0442\u0435\u043B\u0430:  ").concat(visit.weight, "</p>\n                                 <p class=\"card-illness\">\u041F\u0435\u0440\u0435\u043D\u0435\u0441\u0435\u043D\u043D\u044B\u0435 \u0437\u0430\u0431\u043E\u043B\u0435\u0432\u0430\u043D\u0438\u044F \u0441\u0435\u0440\u0434\u0435\u0447\u043D\u043E-\u0441\u043E\u0441\u0443\u0434\u0438\u0441\u0442\u043E\u0439 \u0441\u0438\u0441\u0442\u0435\u043C\u044B:  ").concat(visit.illness, "</p>\n                                 <p class=\"card-description\">\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u043E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u0432\u0438\u0437\u0438\u0442\u0430:  ").concat(visit.description, "</p>");

        default:
          return '';
      }
    }
  }, {
    key: "changeCards",
    value: function changeCards(event, cardId) {
      var currentButtonId = event.target.dataset.id;

      switch (currentButtonId) {
        case 'dropdown-finish':
          this.finishStatus(cardId);
          break;

        case 'dropdown-edit':
          this.openEditCardModal(cardId);
          break;

        case 'dropdown-remove':
          this.removeCard(cardId);
          break;

        default:
          return;
      }
    }
  }, {
    key: "removeCard",
    value: function removeCard(id) {
      var _this2 = this;

      var currentCard = document.querySelector("[data-id=\"".concat(id, "\"] "));
      _shared_modal__WEBPACK_IMPORTED_MODULE_2__["modalInstance"].open('confirm-modal');
      setTimeout(function () {
        _shared_confirm_modal__WEBPACK_IMPORTED_MODULE_3__["confirmModalInstance"].init();

        _shared_confirm_modal__WEBPACK_IMPORTED_MODULE_3__["confirmModalInstance"].action = function () {
          // show loader
          _this2.preloader.classList.remove('close');

          _shared_api_methods__WEBPACK_IMPORTED_MODULE_0__["apiMethodsInstance"].deleteCard(id).then(function () {
            // hide loader
            _this2.preloader.classList.add('close');

            currentCard.remove();
            _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_1__["medicalDataOperationsInstance"].removeCard(id);
            var boardMessage = document.querySelector('#board-message');

            if (_this2.cardList.length === 0) {
              boardMessage.classList.remove('close');
            } else {
              boardMessage.classList.add('close');
            }

            _this2.closeBtn.removeEventListener('click', function () {
              return _this2.removeCard();
            });

            _shared_confirm_modal__WEBPACK_IMPORTED_MODULE_3__["confirmModalInstance"].cancel();
          })["catch"](function (error) {
            // hide loader
            _this2.preloader.classList.add('close');

            console.log('Delete error', error);
          });
        };
      }, 550);
    }
  }, {
    key: "finishStatus",
    value: function finishStatus(cardId) {
      var _this3 = this;

      _shared_modal__WEBPACK_IMPORTED_MODULE_2__["modalInstance"].open('confirm-modal');
      setTimeout(function () {
        _shared_confirm_modal__WEBPACK_IMPORTED_MODULE_3__["confirmModalInstance"].init();

        _shared_confirm_modal__WEBPACK_IMPORTED_MODULE_3__["confirmModalInstance"].action = function () {
          // show loader
          _this3.preloader.classList.remove('close');

          _shared_api_methods__WEBPACK_IMPORTED_MODULE_0__["apiMethodsInstance"].getCard(cardId).then(function (data) {
            // hide loader
            _this3.preloader.classList.add('close');

            _shared_api_methods__WEBPACK_IMPORTED_MODULE_0__["apiMethodsInstance"].editCard(cardId, _objectSpread({}, data, {
              status: 'Закрыт'
            }));
          }).then(function () {
            var currentCard = document.querySelector("[data-id=\"".concat(cardId, "\"]"));
            var status = currentCard.querySelector('.card-status');
            currentCard.style.backgroundColor = "".concat(_this3.backgroundCardSFinish);
            currentCard.style.borderColor = "".concat(_this3.backgroundCardSFinish);
            status.innerText = 'Статус:  Закрыт';
            _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_1__["medicalDataOperationsInstance"].finishStatus(cardId);
            _shared_confirm_modal__WEBPACK_IMPORTED_MODULE_3__["confirmModalInstance"].cancel();
          })["catch"](function (error) {
            // hide loader
            _this3.preloader.classList.add('close');

            console.log('Finish status error', error);
          });
        };
      }, 550);
    }
  }, {
    key: "openEditCardModal",
    value: function openEditCardModal(cardId) {
      var _this4 = this;

      this.createCardBtn.classList.add('close');
      this.editCardBtn.classList.remove('close'); // show loader

      this.preloader.classList.remove('close');
      _shared_api_methods__WEBPACK_IMPORTED_MODULE_0__["apiMethodsInstance"].getCard(cardId).then(function (data) {
        // hide loader
        _this4.preloader.classList.add('close');

        _shared_modal__WEBPACK_IMPORTED_MODULE_2__["modalInstance"].open('create-cards-modal');
        _shared_modal_card_operation__WEBPACK_IMPORTED_MODULE_4__["modalCardOperationInstance"].filterForm(data.doctor);
        _shared_modal_card_operation__WEBPACK_IMPORTED_MODULE_4__["modalCardOperationInstance"].setFieldValues(data);

        _this4.setCurrentCardId(data.id);
      })["catch"](function (error) {
        // hide loader
        _this4.preloader.classList.add('close');

        console.log('Get card by id error', error);
      });
    }
  }, {
    key: "createCard",
    value: function createCard(dataObj) {
      var _this5 = this;

      return _shared_api_methods__WEBPACK_IMPORTED_MODULE_0__["apiMethodsInstance"].createCard(dataObj).then(function (data) {
        return _this5.newCard(data);
      });
    }
  }, {
    key: "editCard",
    value: function editCard(cardId, editedVisit) {
      var _this6 = this;

      return _shared_api_methods__WEBPACK_IMPORTED_MODULE_0__["apiMethodsInstance"].editCard(cardId, editedVisit).then(function (data) {
        var currentCard = document.querySelector("[data-id=\"".concat(cardId, "\"]"));

        var cardBlockForPage = _this6.buildCard(data);

        currentCard.firstChild.remove();

        if (data.status === 'Закрыт') {
          currentCard.style.backgroundColor = "".concat(_this6.backgroundCardSFinish);
        } else {
          currentCard.style.backgroundColor = "".concat(_this6.backgroundCardSOpen);
        }

        currentCard.append(cardBlockForPage.cardBlock);
        _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_1__["medicalDataOperationsInstance"].editCard(cardId, data);
      });
    }
  }, {
    key: "newCard",
    value: function newCard(visit) {
      var card;

      switch (visit.doctor) {
        case 'Терапевт':
          card = new _visits_therapist__WEBPACK_IMPORTED_MODULE_5__["Therapist"](visit);
          break;

        case 'Стоматолог':
          card = new _visits_dentist__WEBPACK_IMPORTED_MODULE_6__["Dentist"](visit);
          break;

        case 'Кардиолог':
          card = new _visits_cardiologist__WEBPACK_IMPORTED_MODULE_7__["Cardiologist"](visit);
          break;

        default:
          card = new _visits_therapist__WEBPACK_IMPORTED_MODULE_5__["Therapist"](visit);
      }

      var cardForPage = this.buildCard(visit);
      var boardMessage = document.querySelector('#board-message');
      boardMessage.classList.add('close');
      this.visitBoard.append(cardForPage.card);
      _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_1__["medicalDataOperationsInstance"].createVisit(visit);
    }
  }, {
    key: "getCurrentCardId",
    value: function getCurrentCardId() {
      return this.currentCardId;
    }
  }, {
    key: "setCurrentCardId",
    value: function setCurrentCardId(cardId) {
      this.currentCardId = cardId;
    }
  }]);

  return CardOperations;
}();
var cardOperationInstance = new CardOperations();

/***/ }),

/***/ "./src/js/cards-list.js":
/*!******************************!*\
  !*** ./src/js/cards-list.js ***!
  \******************************/
/*! exports provided: CardsList, cardsListInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardsList", function() { return CardsList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cardsListInstance", function() { return cardsListInstance; });
/* harmony import */ var _shared_api_methods__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared/api-methods */ "./src/js/shared/api-methods.js");
/* harmony import */ var _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/medical-data-operations */ "./src/js/shared/medical-data-operations.js");
/* harmony import */ var _card_operations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./card-operations */ "./src/js/card-operations.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var CardsList =
/*#__PURE__*/
function () {
  function CardsList() {
    _classCallCheck(this, CardsList);

    this.visitBoard = document.getElementById('visit-board');
    this.preloader = document.getElementById('preloader');
    var token = _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_1__["medicalDataOperationsInstance"].hasToken();

    if (token) {
      this.getCardList();
    }
  }

  _createClass(CardsList, [{
    key: "getCardList",
    value: function getCardList() {
      var _this = this;

      // show loader
      this.preloader.classList.remove('close');
      _shared_api_methods__WEBPACK_IMPORTED_MODULE_0__["apiMethodsInstance"].getCards().then(function (data) {
        // hide loader
        _this.preloader.classList.add('close');

        _this.generateCardsList(data);

        _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_1__["medicalDataOperationsInstance"].setAllCards(data);
      })["catch"](function () {
        //hide loader
        _this.preloader.classList.add('close');

        var cardsArray = _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_1__["medicalDataOperationsInstance"].getAllCards();

        _this.generateCardsList(cardsArray);
      });
    }
  }, {
    key: "generateCardsList",
    value: function generateCardsList(data) {
      var _this2 = this;

      this.visitBoard.innerHTML = '';

      if (data.length === 0) {
        this.visitBoard.innerHTML = "<p class=\"visit-board__message\" id=\"board-message\">\u041D\u0435 \u0441\u043E\u0437\u0434\u0430\u043D\u043E \u043D\u0438 \u043E\u0434\u043D\u043E\u0433\u043E \u0432\u0438\u0437\u0438\u0442\u0430</p>";
      } else {
        this.visitBoard.innerHTML = "<p class=\"visit-board__message close\" id=\"board-message\">\u041D\u0435 \u0441\u043E\u0437\u0434\u0430\u043D\u043E \u043D\u0438 \u043E\u0434\u043D\u043E\u0433\u043E \u0432\u0438\u0437\u0438\u0442\u0430</p>";
      }

      data.forEach(function (visit) {
        var cardsForPage = _card_operations__WEBPACK_IMPORTED_MODULE_2__["cardOperationInstance"].buildCard(visit);

        _this2.visitBoard.append(cardsForPage.card);
      });
    }
  }]);

  return CardsList;
}();
var cardsListInstance = new CardsList();

/***/ }),

/***/ "./src/js/create-edit-card-modal.js":
/*!******************************************!*\
  !*** ./src/js/create-edit-card-modal.js ***!
  \******************************************/
/*! exports provided: CreateEditCardModal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateEditCardModal", function() { return CreateEditCardModal; });
/* harmony import */ var _shared_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared/modal */ "./src/js/shared/modal.js");
/* harmony import */ var _card_operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./card-operations */ "./src/js/card-operations.js");
/* harmony import */ var _shared_modal_card_operation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/modal-card-operation */ "./src/js/shared/modal-card-operation.js");
/* harmony import */ var _shared_modal_card_validation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shared/modal-card-validation */ "./src/js/shared/modal-card-validation.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var CreateEditCardModal =
/*#__PURE__*/
function () {
  function CreateEditCardModal() {
    var _this = this;

    _classCallCheck(this, CreateEditCardModal);

    this.selectFormSpecialty = document.getElementById('select-form-specialty');
    this.createModalCloseBtn = document.querySelector('#modalClose');
    this.createCardBtn = document.getElementById('create-card-btn');
    this.editCardBtn = document.getElementById('edit-card-btn');
    this.preloader = document.getElementById('preloader');
    this.selectFormSpecialty.addEventListener('change', function () {
      _shared_modal_card_operation__WEBPACK_IMPORTED_MODULE_2__["modalCardOperationInstance"].filterForm(_this.selectFormSpecialty.value);
    });
    this.createCardBtn.addEventListener('click', this.create.bind(this));
    this.editCardBtn.addEventListener('click', this.edit.bind(this));
    this.createModalCloseBtn.addEventListener('click', this.close.bind(this));
  }

  _createClass(CreateEditCardModal, [{
    key: "create",
    value: function create() {
      var _this2 = this;

      this.createCardBtn.removeAttribute("disabled");
      _shared_modal_card_validation__WEBPACK_IMPORTED_MODULE_3__["modalCardValidationInstance"].removeValidation();
      var isValid = _shared_modal_card_validation__WEBPACK_IMPORTED_MODULE_3__["modalCardValidationInstance"].checkFieldsPresence();

      if (isValid) {
        this.createCardBtn.setAttribute("disabled", "true");
        var dataObj = _shared_modal_card_operation__WEBPACK_IMPORTED_MODULE_2__["modalCardOperationInstance"].createDataObj(); // show loader

        this.preloader.classList.remove('close');
        _card_operations__WEBPACK_IMPORTED_MODULE_1__["cardOperationInstance"].createCard(dataObj).then(function () {
          // hide loader
          _this2.preloader.classList.add('close');

          _this2.createCardBtn.removeAttribute("disabled");

          _this2.close();
        })["catch"](function (error) {
          // hide loader
          _this2.preloader.classList.add('close');

          console.log('Create card error', error);

          _this2.createCardBtn.removeAttribute("disabled");
        });
      } else {
        this.createCardBtn.style.opacity = '0.7';
      }
    }
  }, {
    key: "edit",
    value: function edit() {
      var _this3 = this;

      var currentCardId = _card_operations__WEBPACK_IMPORTED_MODULE_1__["cardOperationInstance"].getCurrentCardId();
      var editedVisit = _shared_modal_card_operation__WEBPACK_IMPORTED_MODULE_2__["modalCardOperationInstance"].createDataObj();
      this.editCardBtn.setAttribute("disabled", "true"); // show loader

      this.preloader.classList.remove('close');
      _card_operations__WEBPACK_IMPORTED_MODULE_1__["cardOperationInstance"].editCard(currentCardId, editedVisit).then(function () {
        // hide loader
        _this3.preloader.classList.add('close');

        _shared_modal_card_validation__WEBPACK_IMPORTED_MODULE_3__["modalCardValidationInstance"].removeFieldsValue();

        _this3.editCardBtn.removeAttribute("disabled");

        _this3.close();
      })["catch"](function (error) {
        // hide loader
        _this3.preloader.classList.add('close');

        console.log('Edit card error', error);

        _this3.editCardBtn.removeAttribute("disabled");
      });
    }
  }, {
    key: "close",
    value: function close() {
      _shared_modal_card_validation__WEBPACK_IMPORTED_MODULE_3__["modalCardValidationInstance"].removeFieldsValue();
      _shared_modal__WEBPACK_IMPORTED_MODULE_0__["modalInstance"].close();
    }
  }]);

  return CreateEditCardModal;
}();

/***/ }),

/***/ "./src/js/drag-and-drop-card.js":
/*!**************************************!*\
  !*** ./src/js/drag-and-drop-card.js ***!
  \**************************************/
/*! exports provided: DragAndDropCard, dragAndDropCardInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DragAndDropCard", function() { return DragAndDropCard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dragAndDropCardInstance", function() { return dragAndDropCardInstance; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var DragAndDropCard =
/*#__PURE__*/
function () {
  function DragAndDropCard() {
    _classCallCheck(this, DragAndDropCard);

    this.containerCards = document.getElementById('visit-board');
  }

  _createClass(DragAndDropCard, [{
    key: "sortable",
    value: function sortable() {
      new Sortable(this.containerCards, {
        animation: 150
      });
    }
  }]);

  return DragAndDropCard;
}();
var dragAndDropCardInstance = new DragAndDropCard();

/***/ }),

/***/ "./src/js/filter.js":
/*!**************************!*\
  !*** ./src/js/filter.js ***!
  \**************************/
/*! exports provided: Filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Filter", function() { return Filter; });
/* harmony import */ var _cards_list__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cards-list */ "./src/js/cards-list.js");
/* harmony import */ var _shared_api_methods__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/api-methods */ "./src/js/shared/api-methods.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Filter =
/*#__PURE__*/
function () {
  function Filter() {
    _classCallCheck(this, Filter);

    this.searchBtnFilter = document.getElementById('search-btn');
    this.searchBtnFilter.addEventListener('click', this.filterCards.bind(this));
    this.searchBtnTitle = document.getElementById('search-btn-title');
    this.searchBtnTitle.addEventListener('click', this.filterCards.bind(this));
    this.preloader = document.getElementById('preloader');
  }

  _createClass(Filter, [{
    key: "filterCards",
    value: function filterCards() {
      var _this = this;

      // show loader
      this.preloader.classList.remove('close');
      _shared_api_methods__WEBPACK_IMPORTED_MODULE_1__["apiMethodsInstance"].getCards().then(function (data) {
        // hide loader
        _this.preloader.classList.add('close');

        _this.filterVisit(data);
      })["catch"](function (error) {
        // hide loader
        _this.preloader.classList.add('close');

        console.log('Filter error: ', error);
      });
    }
  }, {
    key: "filterVisit",
    value: function filterVisit(visits) {
      var targetFilter = document.getElementById('filter-title').value.toLowerCase();
      var statusFilter = document.getElementById('filter-status').value;
      var priorityFilter = document.getElementById('filter-priority').value;
      var filteredData = visits.filter(function (item) {
        return (item.title.toLowerCase().includes(targetFilter) || item.description.toLowerCase().includes(targetFilter)) && (item.status === statusFilter || statusFilter === 'Все') && (item.priority === priorityFilter || priorityFilter === 'Все');
      });
      _cards_list__WEBPACK_IMPORTED_MODULE_0__["cardsListInstance"].generateCardsList(filteredData);
    }
  }]);

  return Filter;
}();

/***/ }),

/***/ "./src/js/shared/api-methods.js":
/*!**************************************!*\
  !*** ./src/js/shared/api-methods.js ***!
  \**************************************/
/*! exports provided: apiMethodsInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "apiMethodsInstance", function() { return apiMethodsInstance; });
/* harmony import */ var _api_urls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-urls */ "./src/js/shared/api-urls.js");
/* harmony import */ var _medical_data_operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./medical-data-operations */ "./src/js/shared/medical-data-operations.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var APIMethods =
/*#__PURE__*/
function () {
  function APIMethods() {
    _classCallCheck(this, APIMethods);
  }

  _createClass(APIMethods, [{
    key: "getHeaders",
    value: function getHeaders() {
      var token = _medical_data_operations__WEBPACK_IMPORTED_MODULE_1__["medicalDataOperationsInstance"].getToken();
      return {
        Authorization: "Bearer ".concat(token)
      };
    }
  }, {
    key: "createCard",
    value: function createCard(obj) {
      var authOptions = {
        method: "POST",
        url: _api_urls__WEBPACK_IMPORTED_MODULE_0__["APIURLS"].cards,
        data: JSON.stringify(obj),
        headers: this.getHeaders()
      };
      return axios(authOptions).then(function (response) {
        return response.data;
      })["catch"](function (error) {
        return console.log(error);
      });
    }
  }, {
    key: "getCard",
    value: function getCard(cardId) {
      var authOptions = {
        method: "GET",
        url: "".concat(_api_urls__WEBPACK_IMPORTED_MODULE_0__["APIURLS"].cards, "/").concat(cardId),
        headers: this.getHeaders()
      };
      return axios(authOptions).then(function (response) {
        return response.data;
      })["catch"](function (error) {
        return console.log(error);
      });
    }
  }, {
    key: "getCards",
    value: function getCards() {
      var authOptions = {
        method: "GET",
        url: _api_urls__WEBPACK_IMPORTED_MODULE_0__["APIURLS"].cards,
        headers: this.getHeaders()
      };
      return axios(authOptions).then(function (response) {
        return response.data;
      })["catch"](function (error) {
        return console.log(error);
      });
    }
  }, {
    key: "editCard",
    value: function editCard(cardId, obj) {
      var authOptions = {
        method: "PUT",
        url: "".concat(_api_urls__WEBPACK_IMPORTED_MODULE_0__["APIURLS"].cards, "/").concat(cardId),
        data: JSON.stringify(obj),
        headers: this.getHeaders()
      };
      return axios(authOptions).then(function (response) {
        return response.data;
      })["catch"](function (error) {
        return console.log(error);
      });
    }
  }, {
    key: "deleteCard",
    value: function deleteCard(cardId) {
      var authOptions = {
        method: "DELETE",
        url: "".concat(_api_urls__WEBPACK_IMPORTED_MODULE_0__["APIURLS"].cards, "/").concat(cardId),
        data: JSON.stringify({}),
        headers: this.getHeaders()
      };
      return axios(authOptions).then(function (response) {
        return response;
      })["catch"](function (error) {
        return console.log(error);
      });
    }
  }]);

  return APIMethods;
}();

var apiMethodsInstance = new APIMethods();

/***/ }),

/***/ "./src/js/shared/api-urls.js":
/*!***********************************!*\
  !*** ./src/js/shared/api-urls.js ***!
  \***********************************/
/*! exports provided: APIURLS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APIURLS", function() { return APIURLS; });
var APIURLS = {
  login: 'http://cards.danit.com.ua/login',
  cards: 'http://cards.danit.com.ua/cards'
};

/***/ }),

/***/ "./src/js/shared/confirm-modal.js":
/*!****************************************!*\
  !*** ./src/js/shared/confirm-modal.js ***!
  \****************************************/
/*! exports provided: confirmModalInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "confirmModalInstance", function() { return confirmModalInstance; });
/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal */ "./src/js/shared/modal.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var ConfirmModal =
/*#__PURE__*/
function () {
  function ConfirmModal() {
    _classCallCheck(this, ConfirmModal);
  }

  _createClass(ConfirmModal, [{
    key: "init",
    value: function init() {
      this.okBtn = document.querySelector('.ok-btn');
      this.cancelBtn = document.querySelector('.cancel-btn');
      this.cancelModal = document.querySelector('#confirm-modal .close-btn');
      this.okBtn.addEventListener('click', this.confirm.bind(this));
      this.cancelBtn.addEventListener('click', this.cancel.bind(this));
      this.cancelModal.addEventListener('click', this.cancel.bind(this));
      this.action = null;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.okBtn.removeEventListener('click', this.confirm.bind(this));
      this.cancelBtn.removeEventListener('click', this.cancel.bind(this));
      this.cancelModal.removeEventListener('click', this.cancel.bind(this));
    }
  }, {
    key: "confirm",
    value: function confirm() {
      if (this.action) {
        this.action();
      }
    }
  }, {
    key: "cancel",
    value: function cancel() {
      this.destroy();
      _modal__WEBPACK_IMPORTED_MODULE_0__["modalInstance"].close();
    }
  }]);

  return ConfirmModal;
}();

var confirmModalInstance = new ConfirmModal();

/***/ }),

/***/ "./src/js/shared/header.js":
/*!*********************************!*\
  !*** ./src/js/shared/header.js ***!
  \*********************************/
/*! exports provided: headerInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "headerInstance", function() { return headerInstance; });
/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal */ "./src/js/shared/modal.js");
/* harmony import */ var _medical_data_operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./medical-data-operations */ "./src/js/shared/medical-data-operations.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




var Header = function Header() {
  var _this = this;

  _classCallCheck(this, Header);

  this.loginBtn = document.getElementById('activation-btn');
  this.modalOverlay = document.querySelector('.modal-overlay');
  this.createBtn = document.getElementById('create-visit-btn');
  this.editCardBtn = document.getElementById('edit-card-btn');
  this.createCardBtn = document.getElementById('create-card-btn');
  var token = _medical_data_operations__WEBPACK_IMPORTED_MODULE_1__["medicalDataOperationsInstance"].hasToken();

  if (token) {
    this.createBtn.classList.remove('close');
    this.createBtn.classList.add('open');
    this.loginBtn.classList.remove('open');
    this.loginBtn.classList.add('close');
  }

  this.loginBtn.addEventListener('click', function () {
    return _modal__WEBPACK_IMPORTED_MODULE_0__["modalInstance"].open('activation-modal');
  });
  this.createBtn.addEventListener('click', function () {
    _this.editCardBtn.classList.add('close');

    _this.createCardBtn.classList.remove('close');

    _modal__WEBPACK_IMPORTED_MODULE_0__["modalInstance"].open('create-cards-modal');
  }); //remove window when clicking outside the window or close button

  this.modalOverlay.addEventListener('click', function () {
    return _modal__WEBPACK_IMPORTED_MODULE_0__["modalInstance"].close();
  });
};

var headerInstance = new Header();

/***/ }),

/***/ "./src/js/shared/medical-data-operations.js":
/*!**************************************************!*\
  !*** ./src/js/shared/medical-data-operations.js ***!
  \**************************************************/
/*! exports provided: medicalDataOperationsInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "medicalDataOperationsInstance", function() { return medicalDataOperationsInstance; });
/* harmony import */ var _medical_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./medical-storage */ "./src/js/shared/medical-storage.js");
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var MedicalDataOperations =
/*#__PURE__*/
function () {
  function MedicalDataOperations() {
    _classCallCheck(this, MedicalDataOperations);

    this.keyStorage = 'cards';
    this.token = 'token';
  }

  _createClass(MedicalDataOperations, [{
    key: "getToken",
    value: function getToken() {
      return _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].get(this.token);
    }
  }, {
    key: "hasToken",
    value: function hasToken() {
      return _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].has(this.token);
    }
  }, {
    key: "setToken",
    value: function setToken(valueToken) {
      _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].set(this.token, valueToken);
    }
  }, {
    key: "getAllCards",
    value: function getAllCards() {
      return _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].get(this.keyStorage);
    }
  }, {
    key: "setAllCards",
    value: function setAllCards(cards) {
      _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].set(this.keyStorage, cards);
    }
  }, {
    key: "createVisit",
    value: function createVisit(visit) {
      var cards = _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].get(this.keyStorage) || [];
      _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].set(this.keyStorage, [].concat(_toConsumableArray(cards), [visit]));
    }
  }, {
    key: "finishStatus",
    value: function finishStatus(id) {
      var storeCards = _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].get(this.keyStorage);
      var currentObj = storeCards.find(function (item) {
        return item.id === id;
      });
      currentObj.status = 'Закрыт';
      _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].set(this.keyStorage, storeCards);
    }
  }, {
    key: "removeCard",
    value: function removeCard(id) {
      var storeCards = _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].get(this.keyStorage);
      var index = storeCards.findIndex(function (item) {
        return item.id === id;
      });

      if (index !== -1) {
        storeCards.splice(index, 1);
      }

      _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].set(this.keyStorage, storeCards);
    }
  }, {
    key: "editCard",
    value: function editCard(id, visit) {
      var storeCards = _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].get(this.keyStorage);
      var index = storeCards.findIndex(function (item) {
        return item.id === id;
      });
      storeCards.splice(index, 1, visit);
      _medical_storage__WEBPACK_IMPORTED_MODULE_0__["medicalStorageInstance"].set(this.keyStorage, storeCards);
    }
  }]);

  return MedicalDataOperations;
}();

var medicalDataOperationsInstance = new MedicalDataOperations();

/***/ }),

/***/ "./src/js/shared/medical-storage.js":
/*!******************************************!*\
  !*** ./src/js/shared/medical-storage.js ***!
  \******************************************/
/*! exports provided: MedicalStorage, medicalStorageInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MedicalStorage", function() { return MedicalStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "medicalStorageInstance", function() { return medicalStorageInstance; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var MedicalStorage =
/*#__PURE__*/
function () {
  function MedicalStorage() {
    _classCallCheck(this, MedicalStorage);
  }

  _createClass(MedicalStorage, [{
    key: "has",
    value: function has(key) {
      return !!localStorage.getItem("".concat(key));
    }
  }, {
    key: "get",
    value: function get(key) {
      if (localStorage.getItem(key)) {
        return JSON.parse(localStorage.getItem(key));
      }
    }
  }, {
    key: "set",
    value: function set(key, value) {
      localStorage.setItem(key, JSON.stringify(value));
    }
  }]);

  return MedicalStorage;
}();
var medicalStorageInstance = new MedicalStorage();

/***/ }),

/***/ "./src/js/shared/modal-card-operation.js":
/*!***********************************************!*\
  !*** ./src/js/shared/modal-card-operation.js ***!
  \***********************************************/
/*! exports provided: ModalCardOperation, modalCardOperationInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalCardOperation", function() { return ModalCardOperation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modalCardOperationInstance", function() { return modalCardOperationInstance; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ModalCardOperation =
/*#__PURE__*/
function () {
  function ModalCardOperation() {
    _classCallCheck(this, ModalCardOperation);

    this.inputBlock = document.getElementById('wrapper-input');
    this.hiddenItem = document.querySelectorAll('.modal__hidden-item');
    this.selectFormSpecialty = document.getElementById('select-form-specialty');
    this.selectBlockSpecialists = document.getElementById('select-block-specialists');
    this.selectDoctor = document.getElementById('select-form-specialty');
    this.doctor = document.getElementById('select-form-specialty');
    this.specialists = document.getElementById('select-specialists');
    this.priority = document.getElementById('select-priority');
    this.status = document.getElementById('select-status');
    this.description = document.getElementById('modal-area');
    this.formInputs = document.getElementsByClassName('modal-form__input');
  } // event handler on click buttons create card (take the values of the inputs and write to the object dataObj)


  _createClass(ModalCardOperation, [{
    key: "createDataObj",
    value: function createDataObj() {
      var specialists = document.getElementById('select-specialists');
      var today = new Date();
      var dd = String(today.getDate()).padStart(2, '0');
      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!

      var yyyy = today.getFullYear();
      var date = "".concat(dd, "-").concat(mm, "-").concat(yyyy);
      var dataObj = {};
      dataObj.doctor = this.doctor.value;
      dataObj.status = this.status.value;
      dataObj.priority = this.priority.value;
      [].forEach.call(this.formInputs, function (element) {
        dataObj[element.dataset.name] = element.value;
      });
      dataObj.specialists = specialists.value;
      dataObj.description = this.description.value;
      dataObj.date = date;
      return dataObj;
    }
  }, {
    key: "setFieldValues",
    value: function setFieldValues(card) {
      var formInputs = document.getElementsByClassName('modal-form__input'),
          doctor = document.getElementById('select-form-specialty'),
          status = document.getElementById('select-status'),
          priority = document.getElementById('select-priority'),
          specialists = document.getElementById('select-specialists'),
          description = document.getElementById('modal-area');
      doctor.value = card.doctor;
      status.value = card.status;
      priority.value = card.priority;
      specialists.value = card.specialists;
      description.value = card.description;
      [].forEach.call(formInputs, function (element) {
        element.value = card[element.dataset.name];
      });
    } // change event handler in select tag when choosing a doctor

  }, {
    key: "filterForm",
    value: function filterForm(doctor) {
      this.selectDoctor.value = doctor;
      this.inputBlock.innerHTML = "";
      this.hiddenItem.forEach(function (elem) {
        elem.classList.remove('close');
      });
      this.selectBlockSpecialists.innerHTML = this.chooseSpecialist(doctor);
      var inputsDoctor = document.createElement('div');
      inputsDoctor.classList.add('modal-form__input-block');
      inputsDoctor.id = "input-block";
      inputsDoctor.innerHTML = this.chooseInputsDoctor(this.selectFormSpecialty.value);
      this.inputBlock.append(inputsDoctor);
    }
  }, {
    key: "chooseSpecialist",
    value: function chooseSpecialist(doctor) {
      switch (doctor) {
        case 'Терапевт':
          return "<p class=\"modal-form__select-description\">C\u043F\u0435\u0446\u0438\u0430\u043B\u0438\u0441\u0442: </p>\n                    <select class=\"modal-form__select\" id=\"select-specialists\">\n                        <option class=\"modal-form__select-item\" value=\"\u041A\u043E\u0448\u0435\u0432\u043E\u0439 \u0418.\u0418.\">\u041A\u043E\u0448\u0435\u0432\u043E\u0439 \u0418.\u0418.</option>\n                        <option class=\"modal-form__select-item\" value=\"\u0420\u0430\u0431\u0438\u043D\u043E\u0432\u0438\u0447 \u0410.\u0417.\">\u0420\u0430\u0431\u0438\u043D\u043E\u0432\u0438\u0447 \u0410.\u0417.</option>\n                        <option class=\"modal-form__select-item\" value=\"\u041C\u0430\u0440\u0447\u0435\u043D\u043A\u043E \u0410.\u0418.\">\u041C\u0430\u0440\u0447\u0435\u043D\u043A\u043E \u0410.\u0418.</option>\n                    </select>";

        case 'Стоматолог':
          return "<p class=\"modal-form__select-description\">C\u043F\u0435\u0446\u0438\u0430\u043B\u0438\u0441\u0442: </p>\n                    <select class=\"modal-form__select\" id=\"select-specialists\">\n                        <option class=\"modal-form__select-item\" value=\"\u0417\u0443\u0431\u0447\u0435\u043D\u043A\u043E \u0420.\u0414.\">\u0417\u0443\u0431\u0447\u0435\u043D\u043A\u043E \u0420.\u0414.</option>\n                        <option class=\"modal-form__select-item\" value=\"\u042F\u043A\u043E\u0432\u0435\u043D\u043A\u043E \u0421.\u0417.\">\u042F\u043A\u043E\u0432\u0435\u043D\u043A\u043E \u0421.\u0417.</option>\n                        <option class=\"modal-form__select-item\" value=\"\u041F\u0435\u0442\u0440\u043E\u0432 \u0412.\u0418.\">\u041F\u0435\u0442\u0440\u043E\u0432 \u0412.\u0418.</option>\n                    </select>";

        case 'Кардиолог':
          return "<p class=\"modal-form__select-description\">C\u043F\u0435\u0446\u0438\u0430\u043B\u0438\u0441\u0442: </p>\n                    <select class=\"modal-form__select\" id=\"select-specialists\">\n                        <option class=\"modal-form__select-item\" value=\"\u0410\u043B\u0435\u043A\u0441\u0435\u0435\u0432 \u0421.\u0418.\">\u0410\u043B\u0435\u043A\u0441\u0435\u0435\u0432 \u0421.\u0418.</option>\n                        <option class=\"modal-form__select-item\" value=\"\u0410\u0431\u0440\u0430\u043C\u043E\u0432\u0438\u0447 \u0410.\u041D.\">\u0410\u0431\u0440\u0430\u043C\u043E\u0432\u0438\u0447 \u0410.\u041D.</option>\n                        <option class=\"modal-form__select-item\" value=\"\u041E\u043D\u0438\u0449\u0435\u043D\u043A\u043E \u0412.\u0418.\">\u041E\u043D\u0438\u0449\u0435\u043D\u043A\u043E \u0412.\u0418.</option>\n                    </select>";

        default:
          this.selectBlockSpecialists.innerHTML = "";
      }
    }
  }, {
    key: "chooseInputsDoctor",
    value: function chooseInputsDoctor(doctor) {
      switch (doctor) {
        case 'Терапевт':
          return "<input type=\"text\" placeholder=\"\u0424\u0418\u041E*\" class=\"modal-form__input\" id=\"input-name\" data-name=\"name\" >\n                    <input type=\"text\" placeholder=\"\u0426\u0435\u043B\u044C \u0432\u0438\u0437\u0438\u0442\u0430*\" class=\"modal-form__input input-title\" id=\"input-title\" data-name=\"title\">\n                    <input type=\"text\" placeholder=\"\u0412\u043E\u0437\u0440\u0430\u0441\u0442*\" class=\"modal-form__input input-age\" id=\"input-age\" data-name=\"age\">";

        case 'Стоматолог':
          return "<input type=\"text\" placeholder=\"\u0424\u0418\u041E*\" class=\"modal-form__input\" id=\"input-name\" data-name=\"name\" >                  \n                    <input type=\"text\" placeholder=\"\u0426\u0435\u043B\u044C \u0432\u0438\u0437\u0438\u0442\u0430*\" class=\"modal-form__input\" id=\"input-title\" data-name=\"title\">\n                    <input type=\"text\" placeholder=\"\u0414\u0430\u0442\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u0441\u0435\u0449\u0435\u043D\u0438\u044F (\u0434\u0434.\u043C\u043C.\u0433\u0433\u0433\u0433)*\"\n                           class=\"modal-form__input modal-form__input-date\"\n                           id=\"input-lastVisit\"\n                           data-name=\"lastVisit\">";

        case 'Кардиолог':
          return "<input type=\"text\" placeholder=\"\u0424\u0418\u041E*\" class=\"modal-form__input\" id=\"input-name\" data-name=\"name\" >\n                    <input type=\"text\" placeholder=\"\u0426\u0435\u043B\u044C \u0432\u0438\u0437\u0438\u0442\u0430*\" class=\"modal-form__input\" id=\"input-title\" data-name=\"title\">\n                    <input type=\"text\" placeholder=\"\u0412\u043E\u0437\u0440\u0430\u0441\u0442*\" class=\"modal-form__input\" id=\"input-age\" data-name=\"age\">                 \n                    <input type=\"text\" placeholder=\"\u041E\u0431\u044B\u0447\u043D\u043E\u0435 \u0434\u0430\u0432\u043B\u0435\u043D\u0438\u0435*\" class=\"modal-form__input\" id=\"input-pressure\"\n                           data-name=\"pressure\">\n                    <input type=\"text\" placeholder=\"\u0418\u043D\u0434\u0435\u043A\u0441 \u043C\u0430\u0441\u0441\u044B \u0442\u0435\u043B\u0430*\" class=\"modal-form__input\" id=\"input-weight\"\n                           data-name=\"weight\">\n                    <input type=\"text\" placeholder=\"\u041F\u0435\u0440\u0435\u043D\u0435\u0441\u0435\u043D\u043D\u044B\u0435 \u0437\u0430\u0431\u043E\u043B\u0435\u0432\u0430\u043D\u0438\u044F \u0441\u0435\u0440\u0434\u0435\u0447\u043D\u043E-\u0441\u043E\u0441\u0443\u0434\u0438\u0441\u0442\u043E\u0439 \u0441\u0438\u0441\u0442\u0435\u043C\u044B*\"\n                           class=\"modal-form__input\" id=input-illness\" data-name=\"illness\">";

        default:
          return "<input type=\"text\" placeholder=\"\u0424\u0418\u041E*\" class=\"modal-form__input input-name\" data-name=\"name\" >\n                    <input type=\"text\" placeholder=\"\u0426\u0435\u043B\u044C \u0432\u0438\u0437\u0438\u0442\u0430*\" class=\"modal-form__input\" id=\"input-title\" data-name=\"title\">\n                    <input type=\"text\" placeholder=\"\u0412\u043E\u0437\u0440\u0430\u0441\u0442*\" class=\"modal-form__input\" id=\"input-age\" data-name=\"age\">";
      }
    }
  }]);

  return ModalCardOperation;
}();
var modalCardOperationInstance = new ModalCardOperation();

/***/ }),

/***/ "./src/js/shared/modal-card-validation.js":
/*!************************************************!*\
  !*** ./src/js/shared/modal-card-validation.js ***!
  \************************************************/
/*! exports provided: ModalCardValidation, modalCardValidationInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalCardValidation", function() { return ModalCardValidation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modalCardValidationInstance", function() { return modalCardValidationInstance; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ModalCardValidation =
/*#__PURE__*/
function () {
  function ModalCardValidation() {
    _classCallCheck(this, ModalCardValidation);

    this.doctor = document.getElementById('select-form-specialty');
    this.specialists = document.getElementById('select-specialists');
    this.priority = document.getElementById('select-priority');
    this.status = document.getElementById('select-status');
    this.description = document.getElementById('modal-area');
    this.form = document.getElementById('form');
    this.formInputs = document.getElementsByClassName('modal-form__input');
    this.hiddenItem = document.querySelectorAll('.modal__hidden-item');
    this.createCardBtn = document.getElementById('create-card-btn');
  }

  _createClass(ModalCardValidation, [{
    key: "removeFieldsValue",
    value: function removeFieldsValue() {
      this.removeValidation();
      this.doctor.selectedIndex = 0;
      this.priority.selectedIndex = 0;
      this.status.selectedIndex = 0;
      this.hiddenItem.forEach(function (elem) {
        elem.classList.add('close');
      });
      [].forEach.call(this.formInputs, function (element) {
        element.classList.add('close');
      });
      this.description.value = '';
    }
  }, {
    key: "generateError",
    value: function generateError(text) {
      var error = document.createElement('div');
      error.className = 'error';
      error.style.color = 'red';
      error.innerHTML = text;
      return error;
    }
  }, {
    key: "removeValidation",
    value: function removeValidation() {
      var errors = this.form.querySelectorAll('.error');
      errors.forEach(function (item) {
        return item.remove();
      });
      this.createCardBtn.style.opacity = '1';
    }
  }, {
    key: "checkFieldsPresence",
    value: function checkFieldsPresence() {
      var _this = this;

      var emptyInput = 0;
      var formInputs = document.getElementsByClassName('modal-form__input');
      [].forEach.call(formInputs, function (element) {
        if (!element.value.trim()) {
          var error = _this.generateError('Заполните это поле');

          element.before(error);
          emptyInput++;
        }
      });
      return emptyInput === 0;
    }
  }]);

  return ModalCardValidation;
}();
var modalCardValidationInstance = new ModalCardValidation();

/***/ }),

/***/ "./src/js/shared/modal.js":
/*!********************************!*\
  !*** ./src/js/shared/modal.js ***!
  \********************************/
/*! exports provided: modalInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modalInstance", function() { return modalInstance; });
/* harmony import */ var _modal_card_validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modal-card-validation */ "./src/js/shared/modal-card-validation.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Modal =
/*#__PURE__*/
function () {
  function Modal() {
    _classCallCheck(this, Modal);

    this.currentModalId = null;
    this.overlay = null;
  }

  _createClass(Modal, [{
    key: "open",
    value: function open(modalId) {
      var _this = this;

      document.getElementById(modalId).classList.remove('close');
      document.getElementById(modalId).classList.add('open');
      this.currentModalId = modalId;
      this.openOverlay();
      this.overlay.addEventListener('click', function () {
        _modal_card_validation__WEBPACK_IMPORTED_MODULE_0__["modalCardValidationInstance"].removeFieldsValue();

        _this.close();

        _this.close();
      });
    }
  }, {
    key: "close",
    value: function close() {
      if (this.currentModalId) {
        document.getElementById(this.currentModalId).classList.remove('open');
        document.getElementById(this.currentModalId).classList.add('close');
        this.closeOverlay();
      } else {
        console.log(new Error('You do not have any modal opened!'));
      }
    }
  }, {
    key: "openOverlay",
    value: function openOverlay() {
      document.querySelector('.modal-overlay').classList.add('open');
      document.querySelector('.modal-overlay').classList.remove('close');
      this.overlay = document.querySelector('.modal-overlay');
    }
  }, {
    key: "closeOverlay",
    value: function closeOverlay() {
      this.overlay.classList.add('close');
      this.overlay.classList.remove('open');
    }
  }]);

  return Modal;
}();

var modalInstance = new Modal();

/***/ }),

/***/ "./src/js/user.js":
/*!************************!*\
  !*** ./src/js/user.js ***!
  \************************/
/*! exports provided: User */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "User", function() { return User; });
/* harmony import */ var _shared_api_urls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared/api-urls */ "./src/js/shared/api-urls.js");
/* harmony import */ var _shared_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/modal */ "./src/js/shared/modal.js");
/* harmony import */ var _shared_header__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared/header */ "./src/js/shared/header.js");
/* harmony import */ var _cards_list__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cards-list */ "./src/js/cards-list.js");
/* harmony import */ var _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shared/medical-data-operations */ "./src/js/shared/medical-data-operations.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }






var User =
/*#__PURE__*/
function () {
  function User() {
    var _this = this;

    _classCallCheck(this, User);

    this.errorMessage = document.getElementById('error-message');
    this.loginCloseBtn = document.querySelector('#activation-modal .close-btn');
    this.loginCloseBtn = document.querySelector('#activation-modal .close-btn');
    this.submitBtn = document.getElementById('submitBtn');
    this.preloader = document.getElementById('preloader');
    this.loginCloseBtn.addEventListener('click', function () {
      _this.errorMessage.classList.add('close');

      _shared_modal__WEBPACK_IMPORTED_MODULE_1__["modalInstance"].close('activation-modal');
    });
    this.submitBtn.addEventListener('click', this.login.bind(this));
  }

  _createClass(User, [{
    key: "login",
    value: function login() {
      var _this2 = this;

      var emailValue = document.getElementById('email').value;
      var passwordValue = document.getElementById('password').value;
      var data = {
        email: emailValue,
        password: passwordValue
      };
      var authOptions = {
        method: "POST",
        url: _shared_api_urls__WEBPACK_IMPORTED_MODULE_0__["APIURLS"].login,
        data: JSON.stringify(data)
      }; // show loader

      this.preloader.classList.remove('close');
      axios(authOptions).then(function (response) {
        // hide loader
        _this2.preloader.classList.add('close');

        if (response.data && response.data.token !== null) {
          _shared_medical_data_operations__WEBPACK_IMPORTED_MODULE_4__["medicalDataOperationsInstance"].setToken(response.data.token);
          _shared_modal__WEBPACK_IMPORTED_MODULE_1__["modalInstance"].close('activation-modal');
          _shared_header__WEBPACK_IMPORTED_MODULE_2__["headerInstance"].loginBtn.classList.add('close');
          _shared_header__WEBPACK_IMPORTED_MODULE_2__["headerInstance"].createBtn.classList.remove('close');
          _shared_header__WEBPACK_IMPORTED_MODULE_2__["headerInstance"].createBtn.classList.add('open');
          _cards_list__WEBPACK_IMPORTED_MODULE_3__["cardsListInstance"].getCardList();
        } else {
          _this2.errorMessage.classList.remove('close');

          _this2.errorMessage.innerText = "".concat(response.data.message, "!!!");
        }
      })["catch"](function (error) {
        // hide loader
        _this2.preloader.classList.add('close');

        console.log('Login error: ', error);
      });
    }
  }]);

  return User;
}();

/***/ }),

/***/ "./src/js/visits/cardiologist.js":
/*!***************************************!*\
  !*** ./src/js/visits/cardiologist.js ***!
  \***************************************/
/*! exports provided: Cardiologist */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cardiologist", function() { return Cardiologist; });
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./visit */ "./src/js/visits/visit.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }


var Cardiologist =
/*#__PURE__*/
function (_Visit) {
  _inherits(Cardiologist, _Visit);

  function Cardiologist(obj) {
    var _this;

    _classCallCheck(this, Cardiologist);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cardiologist).call(this, obj));
    _this.pressure = obj.pressure;
    _this.weight = obj.weight;
    _this.illness = obj.illness;
    _this.age = obj.age;
    return _this;
  }

  return Cardiologist;
}(_visit__WEBPACK_IMPORTED_MODULE_0__["Visit"]);

/***/ }),

/***/ "./src/js/visits/dentist.js":
/*!**********************************!*\
  !*** ./src/js/visits/dentist.js ***!
  \**********************************/
/*! exports provided: Dentist */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dentist", function() { return Dentist; });
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./visit */ "./src/js/visits/visit.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }


var Dentist =
/*#__PURE__*/
function (_Visit) {
  _inherits(Dentist, _Visit);

  function Dentist(obj) {
    var _this;

    _classCallCheck(this, Dentist);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dentist).call(this, obj));
    _this.lastVisit = obj.lastVisit;
    return _this;
  }

  return Dentist;
}(_visit__WEBPACK_IMPORTED_MODULE_0__["Visit"]);

/***/ }),

/***/ "./src/js/visits/therapist.js":
/*!************************************!*\
  !*** ./src/js/visits/therapist.js ***!
  \************************************/
/*! exports provided: Therapist */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Therapist", function() { return Therapist; });
/* harmony import */ var _visit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./visit */ "./src/js/visits/visit.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }


var Therapist =
/*#__PURE__*/
function (_Visit) {
  _inherits(Therapist, _Visit);

  function Therapist(obj) {
    var _this;

    _classCallCheck(this, Therapist);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Therapist).call(this, obj));
    _this.age = obj.age;
    return _this;
  }

  return Therapist;
}(_visit__WEBPACK_IMPORTED_MODULE_0__["Visit"]);

/***/ }),

/***/ "./src/js/visits/visit.js":
/*!********************************!*\
  !*** ./src/js/visits/visit.js ***!
  \********************************/
/*! exports provided: Visit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Visit", function() { return Visit; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Visit = function Visit(obj) {
  _classCallCheck(this, Visit);

  this.doctor = obj.doctor;
  this.date = obj.date;
  this.name = obj.name;
  this.status = obj.status;
  this.priority = obj.priority;
  this.title = obj.title;
  this.description = obj.description;
  this.specialists = obj.specialists;
  this.id = obj.id;
};

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,